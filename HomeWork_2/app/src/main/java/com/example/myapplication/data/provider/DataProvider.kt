package com.example.myapplication.data.provider

import android.graphics.Color
import com.example.myapplication.domain.channels.entity.ChannelsItem
import com.example.myapplication.domain.channels.entity.Stream
import com.example.myapplication.domain.channels.entity.Topic
import com.example.myapplication.domain.chat.entity.*
import com.example.myapplication.domain.people.entity.User

class DataProvider {

    private val generalTopics = getGeneralStreamTopics()
    private val designTopics = getDesignStreamTopics()

    fun getAllStreams(): List<ChannelsItem> {
        return arrayListOf(
            Stream("#general", generalTopics),
            Stream("#announcements", emptyList()),
            Stream("#Development", emptyList()),
            Stream("#random", emptyList()),
            Stream("#Sharing", emptyList()),
            Stream("#Design", designTopics),
            Stream("#PR", emptyList())
        )
    }

    fun getUsers(): List<User> {
        return arrayListOf(
            User(2, "Barack Obama", "baracka@gmail.com", false),
            User(3, "Emmanuel Macron", "emmanuel_mac@gmail.com", true),
            User(10, "Vladimir Putin", "vlad_Put_In_2036@mail.com", true),
            User(4, "Angela Merkel", "bundes_tag@gmail.com", true),
            User(5, "Joe Biden", "grandpa_best@yahoo.com", false),
        )
    }

    fun getSubscribedStreams(): List<ChannelsItem> {
        val subscribedStreams = listOf("#general", "#Development", "#Design", "#PR")
        return getAllStreams().filter { (it as Stream).streamName in subscribedStreams }
    }

    private fun getGeneralStreamTopics(): List<Topic> {
        return listOf(
            Topic("Testing", "#general", Color.parseColor("#2A9D8F"), getTestingTopicItems()),
            Topic("Bruh", "#general", Color.parseColor("#E9C46A"), getBruhTopicItems())
        )
    }

    private fun getDesignStreamTopics(): List<Topic> {
        return listOf(
            Topic("Meetings", "#Design", Color.parseColor("#FF6200EE"), getWebTopicItems())
        )
    }

    private fun getTestingTopicItems(): List<ChatItem> {
        return arrayListOf(
            Date(2, 2),
            IncomeMessage(
                getUsers()[3],
                "–í –æ–±—â–µ–º, —è —Ä–µ—à–∏–ª–∞. –Ø —É—Ö–æ–∂—É –≤ –æ—Ç–ø—É—Å–∫, —Å–∫–æ–ª—å–∫–æ –º–æ–∂–Ω–æ —É–∂–µ —Å–∏–¥–µ—Ç—å. –ß–µ –¥—É–º–∞–µ—Ç–µ?",
                listOf(
                    Reaction("ü§´", mutableListOf(10)),
                    Reaction("üò™", mutableListOf(5, 10)),
                    Reaction("üòí", mutableListOf(3, 10))
                )
            ),
            OutcomeMessage("–í–æ—Ç —ç—Ç–æ –Ω–æ–≤–æ—Å—Ç–∏", emptyList()),
            IncomeMessage(
                getUsers()[1],
                "–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –º–æ–π —Ñ—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π, –Ω–æ wtf?",
                listOf(
                    Reaction("üò∂", mutableListOf(10, 2))
                )
            ),
            Date(28, 2),
            IncomeMessage(
                getUsers()[2],
                "–ù—É –∏ —á—Ç–æ —Ç–∞–º —Å –ï–≤—Ä–æ—Å–æ—é–∑–æ–º –±—É–¥–µ—Ç? –õ–∞–¥–Ω–æ, –µ—â–µ —É–≤–∏–¥–∏–º—Å—è...",
                emptyList()
            ),
            OutcomeMessage("–ï—â–µ –±—É–¥—É—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏? –ò–ª–∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º —Ç–æ–ø–∏–∫", emptyList()),
            Date(17, 5),
            IncomeMessage(
                getUsers()[4],
                "Donald Trump sucks! Haha, bye bye everyone. See ya later",
                listOf(
                    Reaction("üòú", mutableListOf(4, 2)),
                    Reaction("ü•∞", mutableListOf(3, 4, 5)),
                )
            )
        )
    }

    private fun getBruhTopicItems(): List<ChatItem> {
        return arrayListOf(
            IncomeMessage(
                getUsers()[2],
                "–î–æ–±—Ä—ã–π –¥–µ–Ω—å —É–≤–∞–∂–∞–µ–º—ã–µ, —ç—Ç–æ –í–æ–≤–∞",
                emptyList()
            ),
            OutcomeMessage("–ù–∞ –∫–∞–Ω–∞–ª –º–æ–∂–µ—Ç–µ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è?", emptyList()),
            Date(12, 6),
            IncomeMessage(
                getUsers()[2],
                "–ù–µ –ø–æ–Ω—è–ª, —á—Ç–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å —Ç–æ –Ω–∞–¥–æ?",
                listOf(
                    Reaction("üòú", mutableListOf(4, 2, 5, 3))
                )
            ),
            Date(10, 7),
            IncomeMessage(
                getUsers()[4],
                "You are a killer",
                emptyList()
            ),
            OutcomeMessage("–í—Å–µ –≤—Å–µ–º –ø–æ–∫–∞", emptyList()),
        )
    }

    private fun getWebTopicItems(): List<ChatItem> {
        return arrayListOf(
            Date(20, 10),
            OutcomeMessage("–ö–æ–≥–¥–∞ –±—É–¥–µ—Ç –¥–∏–∑–∞–π–Ω, —Å–∫–æ–ª—å–∫–æ –µ—â–µ –∂–¥–∞—Ç—å?", emptyList()),
            Date(22, 10),
            IncomeMessage(
                getUsers()[0],
                "–í—Å–µ –≥–æ—Ç–æ–≤–æ –±—Ä–∞—Ç, –æ—Ç–ø—Ä–∞–≤–∏–ª –Ω–∞ –ø–æ—á—Ç—É!",
                listOf(
                    Reaction("ü•∞", mutableListOf(3, 4, 5)),
                    Reaction("‚ò∫", mutableListOf(10, 2))
                )
            ),
            IncomeMessage(
                getUsers()[2],
                "–õ—É—á—à–∏–π! –°—Ç–æ–ª—å–∫–æ –±–∞–±–ª–∞ —Å–µ–π—á–∞—Å –∑–∞—Ä–∞–±–æ—Ç–∞–µ–º, –Ω–µ —Å–æ–º–Ω–µ–≤–∞–ª—Å—è –≤ —Ç–µ–±–µ",
                listOf(
                    Reaction("üòç", mutableListOf(2)),
                    Reaction("üò≥", mutableListOf(3, 10)),
                    Reaction("üòõ", mutableListOf(4, 2, 5))
                )
            )
        )
    }
}